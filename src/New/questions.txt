public class checking {
	
	public static void main(String[] args) {
        int[] i = {1};
        checking in = new checking();
        in.increment(i);
        
        System.out.println(i[i.length - 1]);
    }

    void increment(int[] i) {
        i[i.length - 1]++; 
    }
}


---------------------------


public class checking {
	
	public static void main(String[] args) {
		System.out.println(first(5, 3));
    }
	
	private static int first(int a, int b) {
        if (b == 0) {
            return a;
        } else {
            return second(b, a - b);
        }
    }

    private static int second(int a, int b) {
        if (a == 0) {
            return b;
        } else {
            return first(b, a);
        }
    }

    
}

--------------------

public class checking extends A{
	
	static {
        System.out.println("Derived static block");
    }
    {
        System.out.println("Derived instance block");
    }

    public checking() {
        System.out.println("Derived constructor");
    }

    public static void main(String[] args) {
        System.out.println("Main method");
        checking d = new checking();
    }
	
	

    
}

class A{
	
	static {
        System.out.println("Base static block");
    }
    {
        System.out.println("Base instance block");
    }

    public A() {
        System.out.println("Base constructor");
    }
}

---------------------------

	public static void main(String[] args) {
        System.out.println(Arrays.toString("\u0041".getBytes()));
    }


--------------------
